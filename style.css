* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

:root {
  font-size: 62.5%;
  font-family: "Roboto", sans-serif;

  /* variáveis de cores: */
  --tt-heading: #0c3440; /* tt é abreviação de título */

  --tt-label: #00453a;
  --tt-input: #212529;
  --ot-input: #02799d; /* ot é abreviação de outline */
  --bd-input: rgba(73, 80, 87, 0.3); /* bd é abreviação de outline */
  --bg-input: #dce2e9;
  --tt-placeholder: rgba(73, 80, 87, 0.5);

  --tt-button: #fff;
  --bg-button: #02799d;
  --bg-button-hover: #035672;

  --bg-error: #f03e3e;
  --tt-error: #fff;
}

body {
  background-color: #040924;
}

/* Forçando as definições tb no input e button*/
body,
input,
button {
  font-size: 1.6rem;
  line-height: 2rem;
}

.container {
  height: 100vh;
  display: grid;
  place-content: center; /* Mantém as props definidas no card e coloca ao centro!*/

  padding: 24rem;
}

.card {
  border-radius: 0.6rem;
  background: #fff;
  box-shadow: 0 0.2rem 0.4rem 0 rgba(0, 0, 0, 0.1);

  padding: 4.8rem 6.4rem 6.4rem;
  max-width: 42.8rem;
  margin-inline: auto; /* Centraliza horizontalmente! */
}

.title {
  color: var(--tt-heading);
  font-size: 3.2rem;
  font-weight: 700;
  line-height: 4rem;
}

form {
    width: 30rem;
}

form label {
  color: var(--tt-label);
  font-size: 1.4rem;
  line-height: 1.8rem;

  /* obs: label é inline e não aceita margin. Precisamos alterar p/ display block! */
  display: block;
  margin-bottom: 0.8rem;
}

form h1 {
  margin-bottom: 3.2rem;
}

form input {
  color: var(--tt-input);
  width: 100%;

  border: 1px solid var(--bd-input);
  background-color: var(--bg-input);
  border-radius: 0.4rem;

  padding: 1.6rem;
}

/* Foco quando clicamos no input! (Padrão é 2px)*/
form input:focus {
  outline: 2px solid var(--ot-input);
}

form input::placeholder {
  color: var(--tt-placeholder);
}

.input-wrapper + .input-wrapper {
  /* input wrapper precedido por um input-wrapper */
  margin-top: 1.6rem;
}

form button {
  margin-top: 3.2rem;
  padding: 1.6rem;
  width: 100%;

  border-radius: 0.4rem;
  border: none;
  background-color: var(--bg-button);
  color: var(--tt-button);

  display: flex;
  align-items: center;
  justify-content: center;
  gap: 0.8rem;

  font-weight: bold;

  cursor: pointer;

  transition: background .3s;
}

form button:hover {
  background-color: var(--bg-button-hover);
}

/* MODAL */
.modal-wrapper {
    position: absolute;
    inset: 0;

    /* As 4 props abaixo podem ser trocadas pelo inset!*/
    /* top: 0;
    bottom: 0;
    left: 0;
    right: 0; */

    background: rgba(0, 0, 0, 0.70);

    display: grid;
    place-content: center;

    opacity: 0;
    visibility: hidden;
}

.modal {
    position: relative; /* Cria a referência para os elementos dentro do modal (ex: modal button) */
}

.modal button {
    background: none;
    border: none;

    position: absolute;
    top: 1.6rem;
    right: 1.6rem;

    cursor: pointer;

    transition: transform .3s; /* Transição somente no transform! */
}

.modal button:hover{
    transform: scale(1.2); /* Aumenta o tamanho ao cursos passar por cima. */
}